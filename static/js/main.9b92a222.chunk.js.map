{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFac.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","doc","id","update","onDeleteClick","window","confirm","delete","refFromURL","attachmentUrl","toggleEditing","autoFocus","src","class","faTrash","faPencilAlt","TweetFac","userObj","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","res","getDownloadURL","createdAt","Date","now","createdId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","orderBy","onSnapshot","snapshot","tweetArr","docs","map","marginTop","Navigation","to","marginRight","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyTweets","where","get","updateProfile","signOut","push","AppRouter","isLogin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b92a222.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();","import React, { useState } from \"react\"\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {    \r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\")\r\n\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if (name === \"Email\") {\r\n            setEmail(value);\r\n        } else if (name === \"Password\") {\r\n            setPassword(value);\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input \r\n                    name=\"Email\"\r\n                    type=\"text\" \r\n                    placeholder=\"Email\" \r\n                    value={email} \r\n                    required\r\n                    onChange={onChange}\r\n                    className=\"authInput\"/>\r\n                <input \r\n                    name=\"Password\"\r\n                    type=\"password\" \r\n                    placeholder=\"Password\" \r\n                    value={password} \r\n                    required\r\n                    onChange={onChange}\r\n                    className=\"authInput\"/>\r\n                <input \r\n                    type=\"submit\" \r\n                    className=\"authInput authSubmit\"\r\n                    value={newAccount? \"Create Account\" : \"Log In\"}/>\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthForm;","import { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport AuthForm from \"../components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {target: {name}} = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n        console.log(authService);\r\n    }\r\n\r\n    return(\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm/>\r\n            <div className=\"authBtns\">\r\n                <button \r\n                    name=\"google\"\r\n                    onClick={onSocialClick}\r\n                    className=\"authBtn\"\r\n                >\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button \r\n                    name=\"github\"\r\n                    onClick={onSocialClick}\r\n                    className=\"authBtn\"\r\n                >\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )};\r\n\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Tweet = ({ tweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n    const onChange = (event) => {\r\n        const {target: {value}} = event;\r\n        setNewTweet(value);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n            text: newTweet\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure to delete this tweet?\");\r\n        if (ok) {\r\n            await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n            await storageService.refFromURL(tweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    \r\n    return (\r\n        <div className=\"tweet\">\r\n            {editing ? (\r\n                <>\r\n                    {isOwner && (\r\n                        <>\r\n                            <form onSubmit={onSubmit} className=\"container tweetEdit\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    placeholder=\"Edit your tweet\"\r\n                                    onChange={onChange}\r\n                                    value={newTweet} \r\n                                    autoFocus\r\n                                    required\r\n                                    className=\"formInput\"/>\r\n                                <input type=\"submit\" value=\"Update Tweet\" className=\"formBtn\"/>\r\n                            </form> \r\n                            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                                Cancel\r\n                            </span>\r\n                        </>)}\r\n                </>\r\n                ) : (\r\n                <>\r\n                    {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} />}\r\n                    <h4>{tweetObj.text}</h4>\r\n                    {isOwner && (\r\n                        <div class=\"tweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Tweet;","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TweetFac = ({ userObj }) => {\r\n    const [tweet, setTweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        if (tweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment != \"\") {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const res = await attachmentRef.putString(attachment, \"data_url\")\r\n            attachmentUrl = await res.ref.getDownloadURL();\r\n        }\r\n        const tweetObj = {\r\n            text: tweet,\r\n            createdAt: Date.now(),\r\n            createdId: userObj.uid,\r\n            attachmentUrl\r\n        }\r\n        await dbService.collection(\"tweets\").add(tweetObj);\r\n        setTweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {target : {value}} = event;\r\n        setTweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {target: {files}} = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget: {result}} = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachment = () => {setAttachment(\"\")}\r\n    return(\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input \r\n                    className=\"factoryInput__input\"\r\n                    value={tweet} \r\n                    onChange={onChange} \r\n                    type=\"text\" \r\n                    placeholder=\"what's on your mind?\" \r\n                    maxLength={120}/>\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>)}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TweetFac;","import React, { useState, useEffect } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Tweet from \"../components/Tweet\";\r\nimport TweetFac from \"components/TweetFac\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [tweets, setTweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"tweets\").orderBy(\"createdAt\", \"desc\").onSnapshot(snapshot => {\r\n            const tweetArr = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setTweets(tweetArr);\r\n        })\r\n    }, []);\r\n    \r\n    return(\r\n        <div className=\"container\">\r\n            <TweetFac userObj={userObj}/>\r\n            <div style={{ marginTop: 30 }}>\r\n                {tweets.map(tweet => <Tweet key={tweet.id} tweetObj={tweet} isOwner={tweet.createdId === userObj.uid}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n    <nav>\r\n        <ul className=\"navList\">\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\" \r\n                    className=\"navLink\">\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"3x\" />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName\r\n                        ? `${userObj.displayName}의 Profile`\r\n                        : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default Navigation;","import { authService, dbService } from \"fbase\";\r\nimport { useHistory } from \"react-router\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    useEffect(() => {\r\n        getMyTweets();\r\n    }, [])\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push('/');\r\n    };\r\n    const getMyTweets = async () => {\r\n        const tweets = await dbService.collection(\"tweets\")\r\n            .where(\"createdId\",\"==\",userObj.uid)\r\n            .orderBy(\"createdAt\")\r\n            .get();\r\n        console.log(tweets.docs.map(doc => doc.data()));\r\n    }\r\n    const onChange = (event) => {\r\n        const {target: {value}} = event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName\r\n            });\r\n        }\r\n        refreshUser();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input \r\n                    className=\"formInput\"\r\n                    type=\"text\"\r\n                    placeholder=\"Display Name\" \r\n                    onChange={onChange}\r\n                    value={newDisplayName}\r\n                    autoFocus/>\r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                      marginTop: 10,\r\n                    }}/>\r\n            </form>\r\n            <button className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>Log out</button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ refreshUser, isLogin, userObj }) => {\r\n    return(\r\n        <Router>\r\n            {isLogin && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLogin ? \r\n                <div className=\"router\">\r\n                    <Route exact path=\"/\">\r\n                        <Home userObj={userObj}/>\r\n                    </Route>\r\n                    <Route exact path=\"/profile\">\r\n                        <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n                    </Route>\r\n                </div> :\r\n                <Route exact path=\"/\">\r\n                    <Auth/>\r\n                </Route>}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [userObj, setUserObj] = useState(null);\n  \n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args)\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, [])\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    });\n  }\n  \n  return (\n    <>\n      {init? <AppRouter \n                refreshUser={refreshUser}\n                isLogin={Boolean(userObj)} \n                userObj={userObj}/> \n        : \"Initializing\"}\n      <footer>&copy; {new Date().getFullYear()} Twitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}